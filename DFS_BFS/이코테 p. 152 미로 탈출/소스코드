
#include <iostream>
#include <vector>
#include <queue>
int N, M;
using namespace std;

int a[201][201];
int go_y[4] = { 0,1,0,-1 };
int go_x[4] = { 1, 0, -1, 0 };

int BFS(int p, int q) {
    queue<pair<int, int>> que;
    que.push({ p, q });
    while (!que.empty()) {
        int y = que.front().first;
        int x = que.front().second;
        // (0,0)을 기준으로 그 자리에서 상하좌우를 봐야 한다.
        que.pop();
        for (int i = 0; i < 4; i++) {
            if (y + go_y[i] < 0 || y + go_y[i] >= N || x + go_x[i] < 0 || x + go_x[i] >= M) continue;
            if (a[y + go_y[i]][x + go_x[i]] == 0) continue;
            if (a[y + go_y[i]][x + go_x[i]] == 1) {
                a[y + go_y[i]][x + go_x[i]] = a[y][x] + 1;
                que.push({ y + go_y[i], x + go_x[i] });
            }
        }
    }
    return a[N - 1][M - 1];
}

int main() {
	//N이 세로 , M이 가로
	cin >> N >> M;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            char c;
            cin >> c;
            a[i][j] = c - '0';
        }
    }
	cout << BFS(0, 0) << endl;
}
