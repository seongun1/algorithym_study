import sys
import heapq
input = sys.stdin.readline
INF = int(1e9)
n,m,c = map(int,input().split()) # 도시의 개수 n , 통로의 개수 m 메세지를 보내고자 하는 도시 c
graph = [[] for i in range(n)]
distance = [INF] * (n+1)
for i in range(m):
    x,y,z = map(int,input().split())
    graph[x].append((y,z))

def dijkstra (start):
    q= []
    heapq.heappush(q,(0,start))
    distance[start] = 0 
    while q:
        dist,now = heapq.heappop(q)
        if distance[now] <dist:
            continue
        for i in graph[now]:
            cost = dist + i[1]
            if cost < distance[i[0]]:
                distance[i[0]] = cost
                heapq.heappush(q,(cost,i[0]))


dijkstra(c)
count = 0
max_distance = 0
for dis in distance:
    if dis !=INF:
        count +=1
        max_distance = max(max_distance,dis)
print(count -1 , max_distance)
